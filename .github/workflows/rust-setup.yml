name: Rust Project Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - ´*´

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      # Use Github Actions logic
      - uses: actions/checkout@v3

      # Cache installs
      - name: Cache APT packages and lists
        uses: actions/cache@v3
        with:
          path: |
            /var/cache/apt
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Rust toolchain
        uses: actions/cache@v3
        with:
          path: ~/.rustup/toolchains
          key: ${{ runner.os }}-rust-toolchain-${{ hashFiles('rust-toolchain') }}
          restore-keys: |
            ${{ runner.os }}-rust-toolchain-

      # Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libopenblas-dev graphviz

      # Set up Rust
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      # Install cargo package cargo-depgraph
      - name: Install cargo-depgraph
        run: cargo install cargo-depgraph
        

  lint:
    runs-on: ubuntu-latest
    needs: install
    env:
      TERM: xterm
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Format the code
        run: make prep

  test:
    runs-on: ubuntu-latest
    needs: install
    env:
      TERM: xterm
    steps:
      - uses: actions/checkout@v3

      - name: Cache Cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml', 'src/**/*.rs') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-
            ${{ runner.os }}-cargo-

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Run tests
        run: cargo test
